{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","components/Roadster.js","App.js","serviceWorker.js","index.js","logo2.png","components/img/starman1.jpg","components/img/starman2.jpg","components/img/starman3.jpg","components/img/starman4.jpg","components/img/starman5.jpg","components/img/starman6.jpg","components/img/starman7.jpg","components/img/starman8.jpg"],"names":["LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","Link","to","concat","MissionKey","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","style","fontFamily","react_apollo_browser_umd","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch_templateObject","Launch","props","match","params","parseInt","react","variables","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","height","ROADSTER_QUERY","Roadster_templateObject","Roadster","_data$roadster","roadster","name","launch_date_utc","launch_mass_lbs","orbit_type","speed_mph","earth_distance_mi","mars_distance_mi","details","react_wow_dist_default","animation","src","require","alt","client","ApolloClient","uri","App","BrowserRouter","react_animated_css_lib","animationIn","isVisible","logo","width","display","margin","Route","exact","path","component","react_scroll_up_button_default","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.724752bc.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function LaunchItem({\n  launch: { flight_number, mission_name, launch_date_local, launch_success }\n}) {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>\n            Mission:{' '}\n            <span\n              className={classNames({\n                'text-success': launch_success,\n                'text-danger': !launch_success\n              })}\n            >\n              {mission_name}\n            </span>\n          </h4>\n          <p>\n            Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function MissionKey() {\n  return (\n    <div className=\"my-3\">\n      <p>\n        <span className=\"px-3 mr-2 bg-success\" /> = Success\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n      </p>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nimport { Link } from 'react-router-dom';\nimport MissionKey from './MissionKey';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nexport class Launches extends Component {\n  render() {\n    return (\n      <div>\n        <h1\n          className=\"display-4 my-3\"\n          style={{ fontFamily: 'verdana, sansSerif' }}\n        >\n          Launches\n        </h1>\n        <div>\n          <MissionKey />\n          <Link\n            to=\"/roadster\"\n            className=\"btn align-right btn-outline-success my-3\"\n          >\n            Elon Musk's Tesla Roadster\n          </Link>\n        </div>\n        <Query query={LAUNCHES_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4 className=\"text-center\">Loading...</h4>;\n            if (error) console.log(error);\n            console.log(data);\n\n            return (\n              <div>\n                {data.launches.map(launch => (\n                  <LaunchItem key={launch.flight_number} launch={launch} />\n                ))}\n              </div>\n            );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default Launches;\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nclass Launch extends Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n    return (\n      <Fragment>\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading</h4>;\n            if (error) console.log(error);\n\n            const {\n              mission_name,\n              flight_number,\n              launch_year,\n              launch_success,\n              rocket: { rocket_id, rocket_name, rocket_type }\n            } = data.launch;\n\n            return (\n              <div style={{ height: '1200px' }}>\n                <h1 className=\"display-4 my-3\">\n                  <span className=\"text-dark\">Mission:</span> {mission_name}\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Flight Number: {flight_number}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Year: {launch_year}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Successful:\n                    <span\n                      className={classNames({\n                        'text-success': launch_success,\n                        'text-danger': !launch_success\n                      })}\n                    >\n                      {' '}\n                      {launch_success ? 'Yes' : 'No'}\n                    </span>\n                  </li>\n                </ul>\n                <h4 className=\"my-3\">Rocket Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                  <li className=\"list-group-item\">\n                    Rocket Name: {rocket_name}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Rocket Type: {rocket_type}\n                  </li>\n                </ul>\n                <hr />\n                <Link to=\"/\" className=\"btn btn-secondary\">\n                  Back\n                </Link>\n              </div>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\n\nexport default Launch;\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\n\nimport './roadster.css';\nimport ReactWOW from 'react-wow';\n\nconst ROADSTER_QUERY = gql`\n  query RoadsterQuery {\n    roadster {\n      name\n      launch_date_utc\n      launch_mass_lbs\n      orbit_type\n      speed_mph\n      earth_distance_mi\n      mars_distance_mi\n      details\n    }\n  }\n`;\n\nclass Roadster extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Query query={ROADSTER_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading</h4>;\n            if (error) console.log(error);\n\n            const {\n              name,\n              launch_date_utc,\n              launch_mass_lbs,\n              orbit_type,\n              speed_mph,\n              earth_distance_mi,\n              mars_distance_mi,\n              details\n            } = data.roadster;\n\n            return (\n              <div style={{ height: '2000px' }}>\n                <h1 className=\"display-4 my-3\">\n                  <span className=\"text-dark\">Mission:</span> {name}\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Launch Date: {launch_date_utc}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Mass: {launch_mass_lbs}lbs\n                  </li>\n                </ul>\n                <h4 className=\"my-3\">Roadster Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Orbit Type: {orbit_type} </li>\n                  <li className=\"list-group-item\">Speed: {speed_mph} MPH </li>\n                  <li className=\"list-group-item\">\n                    Earth Distance: {earth_distance_mi} Miles\n                  </li>\n                  <li className=\"list-group-item\">\n                    Mars Distance: {mars_distance_mi} Miles\n                  </li>\n                  <li className=\"list-group-item\">{details}</li>\n                </ul>\n                <hr />\n                <Link to=\"/\" className=\"btn btn-secondary\">\n                  Back\n                </Link>\n                <div className=\"mainContainer\">\n                  <ReactWOW animation=\"slideInLeft\">\n                    <img\n                      src={require('./img/starman1.jpg')}\n                      alt=\"Starman Tesla Roadster\"\n                    />\n                  </ReactWOW>\n                  <ReactWOW animation=\"slideInRight\">\n                    <img\n                      src={require('./img/starman2.jpg')}\n                      alt=\"Starman Tesla Roadster\"\n                    />\n                  </ReactWOW>\n                  <ReactWOW animation=\"slideInLeft\">\n                    <img\n                      src={require('./img/starman3.jpg')}\n                      alt=\"Starman Tesla Roadster\"\n                    />\n                  </ReactWOW>\n                  <ReactWOW animation=\"slideInRight\">\n                    <img\n                      src={require('./img/starman4.jpg')}\n                      alt=\"Starman Tesla Roadster\"\n                    />\n                  </ReactWOW>\n                  <ReactWOW animation=\"slideInLeft\">\n                    <img\n                      src={require('./img/starman5.jpg')}\n                      alt=\"Starman Tesla Roadster\"\n                    />\n                  </ReactWOW>\n                  <ReactWOW animation=\"slideInRight\">\n                    <img\n                      src={require('./img/starman6.jpg')}\n                      alt=\"Starman Tesla Roadster\"\n                    />\n                  </ReactWOW>\n                  <ReactWOW animation=\"slideInLeft\">\n                    <img\n                      src={require('./img/starman7.jpg')}\n                      alt=\"Starman Tesla Roadster\"\n                    />\n                  </ReactWOW>\n                  <ReactWOW animation=\"slideInRight\">\n                    <img\n                      src={require('./img/starman8.jpg')}\n                      alt=\"Starman Tesla Roadster\"\n                    />\n                  </ReactWOW>\n                </div>\n              </div>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\n\nexport default Roadster;\n","import React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport Roadster from './components/Roadster';\n\nimport './App.css';\nimport logo from './logo2.png';\nimport { Animated } from 'react-animated-css';\nimport ScrollUpButton from 'react-scroll-up-button';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"stars\">\n            <div className=\"twinkling\">\n              <div className=\"clouds\">\n                <div className=\"container\">\n                  <Animated animationIn=\"fadeInDown\" isVisible={true}>\n                    <img\n                      src={logo}\n                      alt=\"SpaceX\"\n                      style={{ width: 300, display: 'block', margin: 'auto' }}\n                    />\n                  </Animated>\n                  <Route exact path=\"/\" component={Launches} />\n                  <Route exact path=\"/roadster\" component={Roadster} />\n                  <Route\n                    exact\n                    path=\"/launch/:flight_number\"\n                    component={Launch}\n                  />\n                </div>\n              </div>\n            </div>\n            <ScrollUpButton />\n          </div>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo2.da567fde.png\";","module.exports = __webpack_public_path__ + \"static/media/starman1.f6a214a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starman2.b57a1ca7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starman3.95be9f65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starman4.f28f500a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starman5.b2969fda.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starman6.736171e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starman7.04f6c0ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starman8.80ef1c9c.jpg\";"],"sourceRoot":""}